@model CityProblems.Models.AccountViewModel
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Город живой</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            height: 100vh;
        }

        .register-card {
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        }
            .register-card:hover{
                transform: translateY(-5px);
            }

        .toast-notification {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1100;
            min-width: 300px;
            animation: slideIn 0.5s forwards;
        }

        @@keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }

            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        .toast-error {
            border-left: 5px solid #dc3545;
        }
    </style>
</head>
<body class="d-flex align-items-center">

    <div id="notificationContainer" class="toast-notification"></div>

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-4">
                <div class="card border-0 register-card">
                    <div class="card-header bg-primary text-white">
                        <h4 class="card-title text-center mb-0">Регистрация</h4>
                    </div>
                    <div class="card-body p-4">
                        <form method="post" action="/Account/SignUp">
                            <div class="mb-3">
                                <label for="username" class="form-label">Имя пользователя</label>
                                <input type="text" minlength="4" class="form-control" value="@(Model.signUpModel?.Username ?? "")" name="username" id="username" placeholder="Придумайте логин">
                            </div>
                            <div class="mb-3">
                                <label for="email" class="form-label">Электронная почта</label>
                                <input type="email" class="form-control" value="@(Model.signUpModel?.Email ?? "")" name="email" id="email" placeholder="Ваш email">
                            </div>
                            <div class="mb-3">
                                <label for="password" class="form-label">Пароль</label>
                                <input type="password" minlength="4" class="form-control" value="@(Model.signUpModel?.Password ?? "")" name="password" id="password" placeholder="Придумайте пароль">
                            </div>
                            <button type="submit" class="btn btn-primary w-100 mb-2">Зарегистрироваться</button>
                            <a href="/Account/SignIn" class="btn btn-outline-primary w-100 mb-2">Уже есть аккаунт?</a>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>

        function showErrorNotification(message) {
            const container = document.getElementById('notificationContainer');


            const toastEl = document.createElement('div');
            toastEl.className = 'toast show toast-error';
            toastEl.setAttribute('role', 'alert');
            toastEl.setAttribute('aria-live', 'assertive');
            toastEl.setAttribute('aria-atomic', 'true');

            toastEl.innerHTML = `
                        <div class="toast-header bg-white">
                            <strong class="me-auto text-danger">Ошибка</strong>
                            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Закрыть"></button>
                        </div>
                        <div class="toast-body bg-light">
                            ${message}
                        </div>
                    `;


            container.appendChild(toastEl);


            const toast = new bootstrap.Toast(toastEl);
            toast.show();


            toastEl.addEventListener('hidden.bs.toast', function () {
                toastEl.remove();
            });


            setTimeout(() => {
                toast.hide();
            }, 5000);
        }

        @if (!string.IsNullOrEmpty(Model.Error))
        {
            <text>
                document.addEventListener('DOMContentLoaded', function() {
                    showErrorNotification('@Html.Raw(Model.Error)');
                });
            </text>
        }
    </script>

</body>
</html>